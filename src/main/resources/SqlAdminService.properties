# Environments

retrieveEnvironments: select * from environment
editEnvironment: select * from environment where id = ? for update
createEnvironment: \
	insert into environment \
		(rev, name, location, url, host, port, userName, password) \
	values \
		(?, ?, ?, ?, ?, ?, ?, ?)
updateEnvironment: update environment set \
	rev = ?, name = ?, location = ?, url = ?, host = ?, port = ?, userName = ?, password = ? \
	where id = ?
deleteEnvironment: delete from environment where id = ?

# Admin Users

retrieveAdminUser: select * from adminUser where email = ?
retrieveAdminUsers: select * from adminUser order by fullName
retrieveAdminUserRoles: select role.name "name", (select label.text from label \
where label.entity = role.id and label.language = 'EN'and label.entityType = ?) as "title" \
from adminUserRole, role where role.id = adminUserRole.role and	adminUserRole.adminUser = ?
	
editAdminUser: select * from adminUser where id = ? for update
createAdminUser: insert into adminUser(rev, email, fullName, isSuperUser, failedLoginAttempts, isPasswordValid) \
	values (?, ?, ?, ?, ?, false)	
updateAdminUser: update adminUser set \
	rev = ?, email = ?, fullName = ?, isSuperUser = ?, \
	failedLoginAttempts = ? \
	where id = ?
updateAdminUserPassword: update adminUser set rev = ?, password = ?, isPasswordValid = true, temporaryPassword = null where id = ?
updateAdminUserTemporaryPassword: update adminUser set rev = ?, temporaryPassword = ?, isPasswordValid = false where id = ?
deleteAdminUser: delete from adminUser where id = ?
deleteAdminUserRoles: delete from adminUserRole where adminUser = ?
insertAdminUserRole: insert into adminUserRole (adminUser, role) values (?,?)

# Roles

retrieveRoles: select * from role;
retrieveRoleByRev: select * from role where id = ? and rev = ? 
retrieveRolesBySuperAdminUser: select * from role where exists (select 1 from cohort where cohort.role = role.id)
retrieveRolesByAdminUser: select * from role where exists (select 1 from adminUserRole where role.id = adminUserRole.role and adminUserRole.adminUser = ?) and exists (select 1 from cohort where cohort.role = role.id)
createRole: insert into role (rev, name) values (?, ?)
editRole: select * from role where id = ? for update
updateRole: update role set rev = ? where id = ?
deleteRole: delete from role where id = ?

retrieveRoleStatuses: select * from status where role = ?
deleteStatuses: delete from status where role = ?
insertStatus: insert into status (role, name) values(? , ?)

# Cohorts

retrieveCohorts: select *, (select role.name from role where role.id = cohort.role ) as roleName from cohort where role = ?;
retrieveCohort: select *, (select role.name from role where role.id = cohort.role ) as roleName from cohort where role = ? and id = ?;
retrieveCohortByRev: select *, (select role.name from role where role.id = cohort.role ) as roleName from cohort where id = ? and rev = ?
createCohort: insert into cohort (rev, name, role, startDate, disableDate) values (?, ?, ?, ?, ?)
editCohort: select * from cohort where id = ? for update
updateCohort: update cohort set rev = ?, startDate = ?, disableDate = ? where id = ?
deleteCohortByRole: delete from cohort where role = ?
deleteCohort: delete from cohort where id = ?

# Checklists

createTaskGroup: insert into taskGroup (entityType, entityId, name) values (?, ?, ?)
deleteTaskGroupByEntity: delete from taskGroup where entityType = ? and entityId = ?
deleteTaskGroup: delete from taskGroup where id = ?
retrieveTaskGroups: select * from taskGroup where entityType = ? and entityId = ?
deleteCohortTaskGroupByRole: delete from taskGroup where taskGroup.entityType = ? and exists (select 1 from cohort where taskGroup.entityId = cohort.id and cohort.role = ?)

createTask: insert into task (taskGroup, name, dueDate) values (?, ?, ?)
updateTask: update task set dueDate = ? where id = ?
deleteTask: delete from task where id = ?
retrieveTasks: select * from task where taskGroup = ?

retrieveLabels: select * from label where entityType = ? and entity = ?
deleteLabels: delete from label where entityType = ? and entity = ?
insertLabel: insert into label (entityType, entity, language, text) values (?, ?, ?, ?)
deleteCohortLabelsByRole: delete from label where label.entityType = ? and exists (select 1 from cohort where label.entity = cohort.id and cohort.role = ?)

